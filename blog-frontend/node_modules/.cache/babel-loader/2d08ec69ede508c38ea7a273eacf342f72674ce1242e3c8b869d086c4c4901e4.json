{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\leevi\\\\OneDrive\\\\Desktop\\\\Fullstackopen\\\\osa5\\\\blog-frontend\\\\src\\\\components\\\\loginform.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Loginform = ({\n  setToken,\n  setUser,\n  setName\n}) => {\n  _s();\n  const [password, setPassword] = useState('');\n  const [username, setUsername] = useState('');\n  const handlesubmit = async () => {\n    try {\n      const response = await axios.post(\"http://localhost:3003/api/login\", {\n        username,\n        password\n      });\n      if (response.status === 200) {\n        const {\n          token,\n          username,\n          name\n        } = response.data;\n        console.log(\"Login successful!\");\n        console.log(\"Token:\", token);\n        console.log(\"Username:\", username);\n        console.log(\"Name:\", name);\n        setToken(token);\n        setUser(username);\n        setName(name);\n      } else {\n        console.error(\"Login failed. Server returned an error.\");\n      }\n    } catch (error) {\n      console.error(\"Login failed. An error occurred:\", error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Log in to application\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Username: \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Username\",\n        value: username,\n        onChange: e => setUsername(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Password: \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"password\",\n        placeholder: \"Password\",\n        value: password,\n        onChange: e => setPassword(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => handlesubmit(),\n        children: \"Log in\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 5\n  }, this);\n};\n_s(Loginform, \"+E+AGrZdh1wCXXCf2DzunEG+XBI=\");\n_c = Loginform;\nexport default Loginform;\nvar _c;\n$RefreshReg$(_c, \"Loginform\");","map":{"version":3,"names":["React","useState","axios","jsxDEV","_jsxDEV","Loginform","setToken","setUser","setName","_s","password","setPassword","username","setUsername","handlesubmit","response","post","status","token","name","data","console","log","error","children","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","value","onChange","e","target","onClick","_c","$RefreshReg$"],"sources":["C:/Users/leevi/OneDrive/Desktop/Fullstackopen/osa5/blog-frontend/src/components/loginform.js"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport axios from \"axios\";\r\n\r\nconst Loginform = ({setToken, setUser, setName}) => {\r\n  const [password, setPassword] = useState('');\r\n  const [username, setUsername] = useState('');\r\n\r\n  const handlesubmit = async () => {\r\n    try {\r\n      const response = await axios.post(\"http://localhost:3003/api/login\", {\r\n        username,\r\n        password,\r\n      });\r\n\r\n      if (response.status === 200) {\r\n        const { token, username, name } = response.data;\r\n        console.log(\"Login successful!\");\r\n        console.log(\"Token:\", token);\r\n        console.log(\"Username:\", username);\r\n        console.log(\"Name:\", name);\r\n        setToken(token)\r\n        setUser(username)\r\n        setName(name)\r\n      } else {\r\n        console.error(\"Login failed. Server returned an error.\");\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Login failed. An error occurred:\", error);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h1>Log in to application</h1>\r\n      <div>\r\n        <label>Username: </label>\r\n        <input\r\n          type=\"text\"\r\n          placeholder=\"Username\"\r\n          value={username}\r\n          onChange={(e) => setUsername(e.target.value)}\r\n        />\r\n      </div>\r\n      <div>\r\n        <label>Password: </label>\r\n        <input\r\n          type=\"password\"\r\n          placeholder=\"Password\"\r\n          value={password}\r\n          onChange={(e) => setPassword(e.target.value)}\r\n        />\r\n      </div>\r\n      <div>\r\n        <button onClick={() => handlesubmit()}>Log in</button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Loginform;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}